-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema hostinn
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema hostinn
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `hostinn` DEFAULT CHARACTER SET utf8 ;
USE `hostinn` ;

-- -----------------------------------------------------
-- Table `hostinn`.`categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`categoria` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`categoria` (
  `IdCategoria` INT NOT NULL,
  `Categoria` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdCategoria`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`cuenta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`cuenta` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`cuenta` (
  `IdCuenta` INT NOT NULL AUTO_INCREMENT,
  `Username` VARCHAR(45) NOT NULL,
  `Contraseña` VARCHAR(45) NOT NULL,
  `Estado` TINYINT NOT NULL,
  `Categoria_IdCategoria` INT NOT NULL,
  PRIMARY KEY (`IdCuenta`),
  INDEX `Categoria_IdCategoria_idx` (`Categoria_IdCategoria` ASC) VISIBLE,
  CONSTRAINT `Categoria_IdCategoria`
    FOREIGN KEY (`Categoria_IdCategoria`)
    REFERENCES `hostinn`.`categoria` (`IdCategoria`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`administrador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`administrador` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`administrador` (
  `IdAdministrador` INT NOT NULL AUTO_INCREMENT,
  `Cedula` VARCHAR(45) NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `FechaContratacion` DATE NOT NULL,
  `Cuenta_IdCuenta` INT NOT NULL,
  PRIMARY KEY (`IdAdministrador`, `Cuenta_IdCuenta`),
  INDEX `fk_Administrador_Cuenta1_idx` (`Cuenta_IdCuenta` ASC) VISIBLE,
  CONSTRAINT `fk_Administrador_Cuenta1`
    FOREIGN KEY (`Cuenta_IdCuenta`)
    REFERENCES `hostinn`.`cuenta` (`IdCuenta`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`cliente` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`cliente` (
  `IdCliente` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Apeliidos` VARCHAR(45) NOT NULL,
  `Correo` VARCHAR(45) NOT NULL,
  `Nacionalidad` VARCHAR(45) NOT NULL,
  `FechaNacimiento` DATE NOT NULL,
  `Cuenta_IdCuenta` INT NOT NULL,
  PRIMARY KEY (`IdCliente`, `Cuenta_IdCuenta`),
  INDEX `fk_Cliente_Cuenta1_idx` (`Cuenta_IdCuenta` ASC) VISIBLE,
  CONSTRAINT `fk_Cliente_Cuenta1`
    FOREIGN KEY (`Cuenta_IdCuenta`)
    REFERENCES `hostinn`.`cuenta` (`IdCuenta`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`hotel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`hotel` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`hotel` (
  `IdHotel` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Estrellas` INT NOT NULL,
  `Descripcion` VARCHAR(100) NOT NULL,
  `Ubicación` VARCHAR(70) NOT NULL,
  `Estado` TINYINT NOT NULL,
  `Imagen` VARCHAR(70) NULL DEFAULT NULL,
  PRIMARY KEY (`IdHotel`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`habitacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`habitacion` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`habitacion` (
  `IdHabitacion` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Tipo` VARCHAR(45) NOT NULL,
  `Num_Camas` INT NOT NULL,
  `Capacidad` INT NOT NULL,
  `Descripcion` VARCHAR(100) NOT NULL,
  `Precio` INT NOT NULL,
  `Estado` TINYINT NOT NULL,
  `Imagen` VARCHAR(70) NULL DEFAULT NULL,
  `Hotel_IdHotel` INT NOT NULL,
  PRIMARY KEY (`IdHabitacion`, `Hotel_IdHotel`),
  INDEX `fk_Habitacion_Hotel1_idx` (`Hotel_IdHotel` ASC) VISIBLE,
  CONSTRAINT `fk_Habitacion_Hotel1`
    FOREIGN KEY (`Hotel_IdHotel`)
    REFERENCES `hostinn`.`hotel` (`IdHotel`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`metodo de pago`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`metodo de pago` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`metodo de pago` (
  `IdMetodo` INT NOT NULL AUTO_INCREMENT,
  `Tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdMetodo`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`reserva`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`reserva` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`reserva` (
  `IdReserva` INT NOT NULL AUTO_INCREMENT,
  `FechaInicio` DATE NOT NULL,
  `FechaFin` DATE NOT NULL,
  `Monto` INT NOT NULL,
  `Cliente_IdCliente` INT NOT NULL,
  `Habitacion_IdHabitacion` INT NOT NULL,
  `Metodo_de_pago_IdMetodo` INT NOT NULL,
  `Estado` TINYINT NOT NULL DEFAULT '1',
  PRIMARY KEY (`IdReserva`, `Cliente_IdCliente`, `Habitacion_IdHabitacion`, `Metodo_de_pago_IdMetodo`),
  INDEX `fk_Reserva_Cliente1_idx` (`Cliente_IdCliente` ASC) VISIBLE,
  INDEX `fk_Reserva_Habitacion1_idx` (`Habitacion_IdHabitacion` ASC) VISIBLE,
  INDEX `fk_Reserva_Metodo de pago1_idx` (`Metodo_de_pago_IdMetodo` ASC) VISIBLE,
  CONSTRAINT `fk_Reserva_Cliente1`
    FOREIGN KEY (`Cliente_IdCliente`)
    REFERENCES `hostinn`.`cliente` (`IdCliente`),
  CONSTRAINT `fk_Reserva_Habitacion1`
    FOREIGN KEY (`Habitacion_IdHabitacion`)
    REFERENCES `hostinn`.`habitacion` (`IdHabitacion`),
  CONSTRAINT `fk_Reserva_Metodo de pago1`
    FOREIGN KEY (`Metodo_de_pago_IdMetodo`)
    REFERENCES `hostinn`.`metodo de pago` (`IdMetodo`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`factura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`factura` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`factura` (
  `IdFactura` INT NOT NULL AUTO_INCREMENT,
  `NumFactura` INT NOT NULL,
  `Descripcion` VARCHAR(100) NOT NULL,
  `Fecha` DATE NOT NULL,
  `Total` INT NOT NULL,
  `Reserva_IdReserva` INT NOT NULL,
  PRIMARY KEY (`IdFactura`, `Reserva_IdReserva`),
  UNIQUE INDEX `NumFactura_UNIQUE` (`NumFactura` ASC) VISIBLE,
  INDEX `fk_Factura_Reserva1_idx` (`Reserva_IdReserva` ASC) VISIBLE,
  CONSTRAINT `fk_Factura_Reserva1`
    FOREIGN KEY (`Reserva_IdReserva`)
    REFERENCES `hostinn`.`reserva` (`IdReserva`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`gerente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`gerente` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`gerente` (
  `IdGerente` INT NOT NULL AUTO_INCREMENT,
  `Descripcion` VARCHAR(100) NOT NULL,
  `Hotel_IdHotel` INT NOT NULL,
  `Administrador_IdAdministrador` INT NOT NULL,
  PRIMARY KEY (`IdGerente`, `Hotel_IdHotel`, `Administrador_IdAdministrador`),
  INDEX `fk_Gerente_Hotel1_idx` (`Hotel_IdHotel` ASC) VISIBLE,
  INDEX `fk_Gerente_Administrador1_idx` (`Administrador_IdAdministrador` ASC) VISIBLE,
  CONSTRAINT `fk_Gerente_Administrador1`
    FOREIGN KEY (`Administrador_IdAdministrador`)
    REFERENCES `hostinn`.`administrador` (`IdAdministrador`),
  CONSTRAINT `fk_Gerente_Hotel1`
    FOREIGN KEY (`Hotel_IdHotel`)
    REFERENCES `hostinn`.`hotel` (`IdHotel`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`gerente_alto_nivel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`gerente_alto_nivel` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`gerente_alto_nivel` (
  `IdGerente_Alto_Nivel` INT NOT NULL AUTO_INCREMENT,
  `Descripcion` VARCHAR(100) NOT NULL,
  `Administrador_IdAdministrador` INT NOT NULL,
  PRIMARY KEY (`IdGerente_Alto_Nivel`, `Administrador_IdAdministrador`),
  INDEX `fk_Gerente_Alto_Nivel_Administrador1_idx` (`Administrador_IdAdministrador` ASC) VISIBLE,
  CONSTRAINT `fk_Gerente_Alto_Nivel_Administrador1`
    FOREIGN KEY (`Administrador_IdAdministrador`)
    REFERENCES `hostinn`.`administrador` (`IdAdministrador`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`gerente_alto_nivel_has_hotel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`gerente_alto_nivel_has_hotel` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`gerente_alto_nivel_has_hotel` (
  `Gerente_Alto_Nivel_IdGerente_Alto_Nivel` INT NOT NULL,
  `Hotel_IdHotel` INT NOT NULL,
  PRIMARY KEY (`Gerente_Alto_Nivel_IdGerente_Alto_Nivel`, `Hotel_IdHotel`),
  INDEX `fk_Gerente_Alto_Nivel_has_Hotel_Hotel1_idx` (`Hotel_IdHotel` ASC) VISIBLE,
  CONSTRAINT `fk_Gerente_Alto_Nivel_has_Hotel_Gerente_Alto_Nivel1`
    FOREIGN KEY (`Gerente_Alto_Nivel_IdGerente_Alto_Nivel`)
    REFERENCES `hostinn`.`gerente_alto_nivel` (`IdGerente_Alto_Nivel`),
  CONSTRAINT `fk_Gerente_Alto_Nivel_has_Hotel_Hotel1`
    FOREIGN KEY (`Hotel_IdHotel`)
    REFERENCES `hostinn`.`hotel` (`IdHotel`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`metodo de pago_has_cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`metodo de pago_has_cliente` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`metodo de pago_has_cliente` (
  `Cliente_IdCliente` INT NOT NULL,
  `Metodo de pago_IdMetodo` INT NOT NULL,
  PRIMARY KEY (`Cliente_IdCliente`, `Metodo de pago_IdMetodo`),
  INDEX `fk_Metodo de pago_has_Cliente_Metodo de pago1_idx` (`Metodo de pago_IdMetodo` ASC) VISIBLE,
  CONSTRAINT `fk_Metodo de pago_has_Cliente_Cliente`
    FOREIGN KEY (`Cliente_IdCliente`)
    REFERENCES `hostinn`.`cliente` (`IdCliente`),
  CONSTRAINT `fk_Metodo de pago_has_Cliente_Metodo de pago1`
    FOREIGN KEY (`Metodo de pago_IdMetodo`)
    REFERENCES `hostinn`.`metodo de pago` (`IdMetodo`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`recepcionista`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`recepcionista` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`recepcionista` (
  `IdRecepcionista` INT NOT NULL AUTO_INCREMENT,
  `Descripcion` VARCHAR(100) NOT NULL,
  `Hotel_IdHotel` INT NOT NULL,
  `Administrador_IdAdministrador` INT NOT NULL,
  PRIMARY KEY (`IdRecepcionista`, `Hotel_IdHotel`, `Administrador_IdAdministrador`),
  INDEX `fk_Recepcionista_Hotel1_idx` (`Hotel_IdHotel` ASC) VISIBLE,
  INDEX `fk_Recepcionista_Administrador1_idx` (`Administrador_IdAdministrador` ASC) VISIBLE,
  CONSTRAINT `fk_Recepcionista_Administrador1`
    FOREIGN KEY (`Administrador_IdAdministrador`)
    REFERENCES `hostinn`.`administrador` (`IdAdministrador`),
  CONSTRAINT `fk_Recepcionista_Hotel1`
    FOREIGN KEY (`Hotel_IdHotel`)
    REFERENCES `hostinn`.`hotel` (`IdHotel`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`recepcionista_has_reserva`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`recepcionista_has_reserva` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`recepcionista_has_reserva` (
  `Recepcionista_IdRecepcionista` INT NOT NULL,
  `Reserva_IdReserva` INT NOT NULL,
  PRIMARY KEY (`Recepcionista_IdRecepcionista`, `Reserva_IdReserva`),
  INDEX `fk_Recepcionista_has_Reserva_Reserva1_idx` (`Reserva_IdReserva` ASC) VISIBLE,
  CONSTRAINT `fk_Recepcionista_has_Reserva_Recepcionista1`
    FOREIGN KEY (`Recepcionista_IdRecepcionista`)
    REFERENCES `hostinn`.`recepcionista` (`IdRecepcionista`),
  CONSTRAINT `fk_Recepcionista_has_Reserva_Reserva1`
    FOREIGN KEY (`Reserva_IdReserva`)
    REFERENCES `hostinn`.`reserva` (`IdReserva`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `hostinn`.`tarjeta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hostinn`.`tarjeta` ;

CREATE TABLE IF NOT EXISTS `hostinn`.`tarjeta` (
  `IdTarjeta` INT NOT NULL AUTO_INCREMENT,
  `NumTarjeta` VARCHAR(12) NOT NULL,
  `TarjetaHabitante` VARCHAR(45) NOT NULL,
  `CCV` INT NOT NULL,
  `FechaCaducidad` DATE NOT NULL,
  `Estado` TINYINT NOT NULL,
  `Cliente_IdCliente` INT NOT NULL,
  `Metodo de pago_IdMetodo` INT NOT NULL,
  PRIMARY KEY (`IdTarjeta`, `Cliente_IdCliente`, `Metodo de pago_IdMetodo`),
  INDEX `fk_Tarjeta_Cliente1_idx` (`Cliente_IdCliente` ASC) VISIBLE,
  INDEX `fk_Tarjeta_Metodo de pago1_idx` (`Metodo de pago_IdMetodo` ASC) VISIBLE,
  CONSTRAINT `fk_Tarjeta_Cliente1`
    FOREIGN KEY (`Cliente_IdCliente`)
    REFERENCES `hostinn`.`cliente` (`IdCliente`),
  CONSTRAINT `fk_Tarjeta_Metodo de pago1`
    FOREIGN KEY (`Metodo de pago_IdMetodo`)
    REFERENCES `hostinn`.`metodo de pago` (`IdMetodo`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

USE `hostinn` ;

-- -----------------------------------------------------
-- procedure delete_cuenta
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`delete_cuenta`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `delete_cuenta`(IN p_ID int,IN p_estado tinyint)
BEGIN
	UPDATE `hostinn`.`cuenta`
	SET
	`Estado` = p_estado
	WHERE `IdCuenta` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure delete_habitacion
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`delete_habitacion`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `delete_habitacion`(IN p_ID int,IN p_estado tinyint)
BEGIN
	UPDATE `hostinn`.`habitacion`
	SET
	`Estado` = p_estado
	WHERE `IdHabitacion` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure delete_hotel
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`delete_hotel`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `delete_hotel`(IN p_ID int,IN p_estado tinyint)
BEGIN
	UPDATE `hostinn`.`hotel`
	SET
	`Estado` = p_estado
	WHERE `IdHotel` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure delete_reserva
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`delete_reserva`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `delete_reserva`(IN p_ID int,IN p_estado tinyint)
BEGIN
	UPDATE `hostinn`.`reserva`
	SET
	`Estado` = p_estado
	WHERE `IdReserva` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure delete_tarjeta
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`delete_tarjeta`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `delete_tarjeta`(IN p_ID int,IN p_estado tinyint)
BEGIN
	UPDATE `hostinn`.`tarjeta`
	SET
	`Estado` = p_estado
	WHERE `IdTarjeta` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_admin
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_admin`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_admin`(IN p_cedula varchar(45),IN p_nombre varchar(45),IN p_fecha date,p_cuenta int)
BEGIN
	INSERT INTO `hostinn`.`administrador`
	(`Cedula`,
	`Nombre`,
	`FechaContratacion`,
	`Cuenta_IdCuenta`)
	VALUES
	(p_cedula,
	p_nombre,
	p_fecha,
	p_cuenta);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_cliente
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_cliente`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_cliente`(IN p_nombre varchar(45),IN p_apellidos varchar(45),IN p_correo varchar(45),IN p_nacionalidad varchar(45),IN p_fecha date,IN p_cuenta int)
BEGIN
	INSERT INTO `hostinn`.`cliente`
	(`Nombre`,
	`Apeliidos`,
	`Correo`,
	`Nacionalidad`,
	`FechaNacimiento`,
	`Cuenta_IdCuenta`)
	VALUES
	(p_nombre,
	p_apellidos,
	p_correo,
	p_nacionalidad,
	p_fecha,
	p_cuenta);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_cuenta
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_cuenta`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_cuenta`(IN p_username varchar(45),IN p_contraseña varchar(45))
BEGIN
	INSERT INTO `hostinn`.`cuenta`
	(`Username`,
	`Contraseña`)
	VALUES
	(p_username,
	p_contraseña);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_factura
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_factura`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_factura`(IN p_numfactura int,IN p_descripcion varchar(100),IN p_fecha date,IN p_total int,IN p_reserva int)
BEGIN
	INSERT INTO `hostinn`.`factura`
	(`NumFactura`,
	`Descripcion`,
	`Fecha`,
	`Total`,
	`Reserva_IdReserva`)
	VALUES
	(p_numfactura,
	p_descripcion,
	p_fecha,
	p_total,
	p_reserva);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_gerente
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_gerente`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_gerente`(IN p_descripcion varchar(100),IN p_hotel int,IN p_admin int)
BEGIN
	INSERT INTO `hostinn`.`gerente`
	(`Descripcion`,
	`Hotel_IdHotel`,
	`Administrador_IdAdministrador`)
	VALUES
	(p_descripcion,
	p_hotel,
	p_admin);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_gerente_alto_nivel
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_gerente_alto_nivel`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_gerente_alto_nivel`(IN p_descripcion varchar(100),IN p_admin int)
BEGIN
	INSERT INTO `hostinn`.`gerente_alto_nivel`
	(`Descripcion`,
	`Administrador_IdAdministrador`)
	VALUES
	(p_descripcion,
	p_admin);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_gerente_alto_nivelXhotel
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_gerente_alto_nivelXhotel`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_gerente_alto_nivelXhotel`(IN p_gerente int,IN p_hotel int)
BEGIN
	INSERT INTO `hostinn`.`gerente_alto_nivel_has_hotel`
	(`Gerente_Alto_Nivel_IdGerente_Alto_Nivel`,
	`Hotel_IdHotel`)
	VALUES
	(p_gerente,
	p_hotel);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_habitacion
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_habitacion`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_habitacion`(IN p_nombre varchar(45),IN p_tipo varchar(45),IN p_numcamas int,IN p_capacidad int,IN p_descripcion varchar(100),IN p_precio int,IN p_hotel int)
BEGIN
	INSERT INTO `hostinn`.`habitacion`
	(`Nombre`,
	`Tipo`,
	`Num_Camas`,
	`Capacidad`,
	`Descripcion`,
	`Precio`,
	`Hotel_IdHotel`)
	VALUES
	(p_nombre,
	p_tipo,
	p_numcamas,
	p_capacidad,
	p_descripcion,
	p_precio,
	p_hotel);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_hotel
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_hotel`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_hotel`(IN p_nombre varchar(45),IN p_estrellas int,IN p_descripcion varchar(100),IN p_ubicacion varchar(70))
BEGIN
	INSERT INTO `hostinn`.`hotel`
	(`Nombre`,
	`Estrellas`,
	`Descripcion`,
	`Ubicación`)
	VALUES
	(p_nombre,
	p_estrellas,
	p_descripcion,
	p_ubicacion);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_metodo
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_metodo`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_metodo`(IN p_tipo varchar(45))
BEGIN
	INSERT INTO `hostinn`.`metodo de pago`
	(`Tipo`)
	VALUES
	(p_tipo);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_metodoXcliente
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_metodoXcliente`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_metodoXcliente`(IN p_cliente int,IN p_metodo int)
BEGIN
	INSERT INTO `hostinn`.`metodo de pago_has_cliente`
	(`Cliente_IdCliente`,
	`Metodo de pago_IdMetodo`)
	VALUES
	(p_cliente,
	p_metodo);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_recepcionista
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_recepcionista`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_recepcionista`(IN p_descripcion varchar(100),IN p_hotel int,IN p_admin int)
BEGIN
	INSERT INTO `hostinn`.`recepcionista`
	(`Descripcion`,
	`Hotel_IdHotel`,
	`Administrador_IdAdministrador`)
	VALUES
	(p_descripcion,
	p_hotel,
	p_admin);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_recepcionistaXreserva
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_recepcionistaXreserva`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_recepcionistaXreserva`(IN p_recepcionista int,IN p_reserva int)
BEGIN
	INSERT INTO `hostinn`.`recepcionista_has_reserva`
	(`Recepcionista_IdRecepcionista`,
	`Reserva_IdReserva`)
	VALUES
	(p_recepcionista,
	p_reserva);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_reserva
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_reserva`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_reserva`(IN p_fechainicio date,IN p_fechafinal date,IN p_monto int,IN p_cliente int,IN p_habitacion int,IN p_metodo int)
BEGIN
	INSERT INTO `hostinn`.`reserva`
	(`FechaInicio`,
	`FechaFin`,
	`Monto`,
	`Cliente_IdCliente`,
	`Habitacion_IdHabitacion`,
	`Metodo de pago_IdMetodo`)
	VALUES
	(p_fechainicio,
	p_fechafinal,
	p_monto,
	p_cliente,
	p_habitacion,
	p_metodo);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_tarjeta
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`insert_tarjeta`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `insert_tarjeta`(IN p_numtarjeta varchar(12),IN p_tarhabitante varchar(45),IN p_CCV int,IN p_fecha date,IN p_cliente int,IN p_metodo int)
BEGIN
	INSERT INTO `hostinn`.`tarjeta`
	(`NumTarjeta`,
	`TarjetaHabitante`,
	`CCV`,
	`FechaCaducidad`,
	`Cliente_IdCliente`,
	`Metodo de pago_IdMetodo`)
	VALUES
	(p_numtarjeta,
	p_tarhabitante,
	p_CCV,
	p_fecha,
	p_cliente,
	p_metodo);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_admin
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_admin`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_admin`()
BEGIN
	SELECT `administrador`.`IdAdministrador`,
    `administrador`.`Cedula`,
    `administrador`.`Nombre`,
    `administrador`.`FechaContratacion`,
    `administrador`.`Cuenta_IdCuenta`
	FROM `hostinn`.`administrador`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_cliente
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_cliente`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_cliente`()
BEGIN
	SELECT `cliente`.`IdCliente`,
    `cliente`.`Nombre`,
    `cliente`.`Apeliidos`,
    `cliente`.`Correo`,
    `cliente`.`Nacionalidad`,
    `cliente`.`FechaNacimiento`,
    `cliente`.`Cuenta_IdCuenta`
	FROM `hostinn`.`cliente`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_cuenta
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_cuenta`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_cuenta`()
BEGIN
	SELECT `cuenta`.`IdCuenta`,
    `cuenta`.`Username`,
    `cuenta`.`Contraseña`,
    `cuenta`.`Estado`
	FROM `hostinn`.`cuenta`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_factura
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_factura`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_factura`()
BEGIN
	SELECT `factura`.`IdFactura`,
    `factura`.`NumFactura`,
    `factura`.`Descripcion`,
    `factura`.`Fecha`,
    `factura`.`Total`,
    `factura`.`Reserva_IdReserva`
	FROM `hostinn`.`factura`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_gerente
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_gerente`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_gerente`()
BEGIN
	SELECT `gerente`.`IdGerente`,
    `gerente`.`Descripcion`,
    `gerente`.`Hotel_IdHotel`,
    `gerente`.`Administrador_IdAdministrador`
	FROM `hostinn`.`gerente`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_gerente_alto_nivel
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_gerente_alto_nivel`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_gerente_alto_nivel`()
BEGIN
	SELECT `gerente_alto_nivel`.`IdGerente_Alto_Nivel`,
    `gerente_alto_nivel`.`Descripcion`,
    `gerente_alto_nivel`.`Administrador_IdAdministrador`
	FROM `hostinn`.`gerente_alto_nivel`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_gerente_alto_nivelXhotel
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_gerente_alto_nivelXhotel`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_gerente_alto_nivelXhotel`()
BEGIN
	SELECT `gerente_alto_nivel_has_hotel`.`Gerente_Alto_Nivel_IdGerente_Alto_Nivel`,
    `gerente_alto_nivel_has_hotel`.`Hotel_IdHotel`
	FROM `hostinn`.`gerente_alto_nivel_has_hotel`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_habitacion
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_habitacion`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_habitacion`()
BEGIN
	SELECT `habitacion`.`IdHabitacion`,
    `habitacion`.`Nombre`,
    `habitacion`.`Tipo`,
    `habitacion`.`Num_Camas`,
    `habitacion`.`Capacidad`,
    `habitacion`.`Descripcion`,
    `habitacion`.`Precio`,
    `habitacion`.`Estado`,
    `habitacion`.`Hotel_IdHotel`
	FROM `hostinn`.`habitacion`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_hotel
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_hotel`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_hotel`()
BEGIN
	SELECT `hotel`.`IdHotel`,
    `hotel`.`Nombre`,
    `hotel`.`Estrellas`,
    `hotel`.`Descripcion`,
    `hotel`.`Ubicación`,
    `hotel`.`Estado`
	FROM `hostinn`.`hotel`;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_metodo
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_metodo`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_metodo`()
BEGIN
	SELECT `metodo de pago`.`IdMetodo`,
    `metodo de pago`.`Tipo`
	FROM `hostinn`.`metodo de pago`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_metodoXcliente
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_metodoXcliente`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_metodoXcliente`()
BEGIN
	SELECT `metodo de pago_has_cliente`.`Cliente_IdCliente`,
		`metodo de pago_has_cliente`.`Metodo de pago_IdMetodo`
	FROM `hostinn`.`metodo de pago_has_cliente`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_recepcionista
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_recepcionista`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_recepcionista`()
BEGIN
	SELECT `recepcionista`.`IdRecepcionista`,
    `recepcionista`.`Descripcion`,
    `recepcionista`.`Hotel_IdHotel`,
    `recepcionista`.`Administrador_IdAdministrador`
	FROM `hostinn`.`recepcionista`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_recepcionistaXreserva
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_recepcionistaXreserva`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_recepcionistaXreserva`()
BEGIN
	SELECT `recepcionista_has_reserva`.`Recepcionista_IdRecepcionista`,
    `recepcionista_has_reserva`.`Reserva_IdReserva`
	FROM `hostinn`.`recepcionista_has_reserva`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_reserva
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_reserva`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_reserva`()
BEGIN
	SELECT `reserva`.`IdReserva`,
    `reserva`.`FechaInicio`,
    `reserva`.`FechaFin`,
    `reserva`.`Monto`,
    `reserva`.`Estado`,
    `reserva`.`Cliente_IdCliente`,
    `reserva`.`Habitacion_IdHabitacion`,
    `reserva`.`Metodo de pago_IdMetodo`
	FROM `hostinn`.`reserva`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure read_tarjeta
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`read_tarjeta`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `read_tarjeta`()
BEGIN
	SELECT `tarjeta`.`IdTarjeta`,
    `tarjeta`.`NumTarjeta`,
    `tarjeta`.`TarjetaHabitante`,
    `tarjeta`.`CCV`,
    `tarjeta`.`FechaCaducidad`,
    `tarjeta`.`Estado`,
    `tarjeta`.`Cliente_IdCliente`,
    `tarjeta`.`Metodo de pago_IdMetodo`
	FROM `hostinn`.`tarjeta`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_admin
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_admin`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_admin`(IN p_ID int,IN p_cedula varchar(45),IN p_nombre varchar(45),IN p_fecha date)
BEGIN
	UPDATE `hostinn`.`administrador`
	SET
	`Cedula` = p_cedula,
	`Nombre` = p_nombre,
	`FechaContratacion` = p_fecha
	WHERE `IdAdministrador` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_cliente
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_cliente`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_cliente`(IN p_ID int,IN p_nombre varchar(45),IN p_apellidos varchar(45),IN p_correo varchar(45),IN p_nacionalidad varchar(45),IN p_fecha date)
BEGIN
	UPDATE `hostinn`.`cliente`
	SET
	`Nombre` = p_nombre,
	`Apeliidos` = p_apellidos,
	`Correo` = p_correo,
	`Nacionalidad` =p_nacionalidad,
	`FechaNacimiento` = p_fecha
	WHERE `IdCliente` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_cuenta
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_cuenta`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_cuenta`(IN p_ID int,IN p_username varchar(45),IN p_contraseña varchar(45))
BEGIN
	UPDATE `hostinn`.`cuenta`
	SET
	`Username` = p_username,
	`Contraseña` = p_contraseña
	WHERE `IdCuenta` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_factura
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_factura`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_factura`(IN p_ID int,IN p_descripcion varchar(100),IN p_fecha date,IN p_total int)
BEGIN
	UPDATE `hostinn`.`factura`
	SET
	`Descripcion` = p_descripcion,
	`Fecha` = p_fecha,
	`Total` = p_total
	WHERE `IdFactura` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_gerente
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_gerente`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_gerente`(IN p_ID int,IN p_descripcion varchar(100),IN p_hotel int)
BEGIN
	UPDATE `hostinn`.`gerente`
SET
`Descripcion` = p_descripcion,
`Hotel_IdHotel` = p_hotel
WHERE `IdGerente` = p_ID;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_gerente_alto_nivel
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_gerente_alto_nivel`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_gerente_alto_nivel`(IN p_ID int,IN p_descripcion varchar(100))
BEGIN
	UPDATE `hostinn`.`gerente_alto_nivel`
	SET
	`Descripcion` = p_descripcion
	WHERE `IdGerente_Alto_Nivel` =p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_habitacion
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_habitacion`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_habitacion`(IN p_ID int,IN p_nombre varchar(45),IN p_tipo varchar(45),IN p_numcamas int,IN p_capacidad int,IN p_descripcion varchar(100),IN p_precio int)
BEGIN
	UPDATE `hostinn`.`habitacion`
	SET
	`Nombre` = p_nombre,
	`Tipo` = p_tipo,
	`Num_Camas` = p_numcamas,
	`Capacidad` = p_capacidad,
	`Descripcion` = p_descripcion,
	`Precio` = p_precio
	WHERE `IdHabitacion` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_hotel
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_hotel`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_hotel`(IN p_ID int,IN p_nombre varchar(45),IN p_estrellas int,IN p_descripcion varchar(100),IN p_ubicacion varchar(70))
BEGIN
	UPDATE `hostinn`.`hotel`
	SET
	`Nombre` = p_nombre,
	`Estrellas` = p_estrellas,
	`Descripcion` = p_descripcion,
	`Ubicación` = p_ubicacion
	WHERE `IdHotel` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_metodo
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_metodo`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_metodo`(IN p_ID int,IN p_tipo varchar(45))
BEGIN
	UPDATE `hostinn`.`metodo de pago`
	SET
	`Tipo` = p_tipo
	WHERE `IdMetodo` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_recepcionista
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_recepcionista`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_recepcionista`(IN p_ID int,IN p_descripcion varchar(100),IN p_hotel int)
BEGIN
	UPDATE `hostinn`.`recepcionista`
	SET
	`Descripcion` = p_descripcion,
	`Hotel_IdHotel` = p_hotel
	WHERE `IdRecepcionista` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_reserva
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_reserva`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_reserva`(IN p_ID int,IN p_fechainicio date,IN p_fechafinal date,IN p_monto int,IN p_cliente int, IN p_habitacion int)
BEGIN
	UPDATE `hostinn`.`reserva`
	SET
	`FechaInicio` = p_fechainicio,
	`FechaFin` = p_fechafinal,
	`Monto` = p_monto,
	`Cliente_IdCliente` = p_cliente,
	`Habitacion_IdHabitacion` = p_habitacion
	WHERE `IdReserva` = p_ID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_tarjeta
-- -----------------------------------------------------

USE `hostinn`;
DROP procedure IF EXISTS `hostinn`.`update_tarjeta`;

DELIMITER $$
USE `hostinn`$$
CREATE DEFINER=`Jenaro`@`%` PROCEDURE `update_tarjeta`(IN p_ID int,IN p_numtarjeta varchar(12),IN p_tarhabitante varchar(45),IN p_CCV int,IN p_fecha date)
BEGIN
	UPDATE `hostinn`.`tarjeta`
	SET
	`NumTarjeta` = p_numtarjeta,
	`TarjetaHabitante` = p_tarhabitante,
	`CCV` = p_CCV,
	`FechaCaducidad` = p_fecha
	WHERE `IdTarjeta` = p_ID;

END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
